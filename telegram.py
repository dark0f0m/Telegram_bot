import requests
import schedule
import time
import datetime
import pytz
import logging
from telegram import Bot, Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TELEGRAM_BOT_TOKEN = "7842539374:AAGuHhEgAcS6dAHKvCqEXjzVksgJD83fOkQ"
CHAT_ID = "1125069128"  # ID —á–∞—Ç–∞
WEATHER_API_KEY = "cdc958826226e0655a3eab011eaaebf5"
NEWS_API_KEY = "YOUR_NEWSAPI_KEY"
TIMEZONE = "Europe/Moscow"  # –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å

# === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ===
logging.basicConfig(
    filename="bot.log",
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    encoding="utf-8"
)

# === –î–ê–ù–ù–´–ï ===
BIRTHDAYS = {
    "–ê–Ω—è": "2025-03-29",
    "–°–µ—Ä–≥–µ–π": "2025-03-30"
}

bot = Bot(token=TELEGRAM_BOT_TOKEN)

# === –§–£–ù–ö–¶–ò–ò ===

def get_weather():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –õ—É–≥–∞–Ω—Å–∫–µ"""
    url = f"https://api.openweathermap.org/data/2.5/weather?q=–õ—É–≥–∞–Ω—Å–∫,ru&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    try:
        response = requests.get(url).json()
        if response.get("main"):
            temp = response["main"]["temp"]
            description = response["weather"][0]["description"]
            return f"‚òÄÔ∏è –ü–æ–≥–æ–¥–∞ –≤ –õ—É–≥–∞–Ω—Å–∫–µ:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n{description.capitalize()}"
        return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã."
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–≥–æ–¥—ã: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã."

def check_birthdays():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 3 –¥–Ω—è"""
    today = datetime.date.today()
    upcoming = []

    for name, date in BIRTHDAYS.items():
        bday = datetime.datetime.strptime(date, "%Y-%m-%d").date()
        delta = (bday - today).days
        if 0 <= delta <= 3:
            upcoming.append(f"üéâ {name} ‚Äî {bday.strftime('%d.%m.%Y')} ({delta} –¥–Ω.)")

    return "üéÇ –ë–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è:\n" + "\n".join(upcoming) if upcoming else "‚ùå –î–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π –Ω–µ—Ç."

def get_news():
    """–ü–æ–ª—É—á–∞–µ—Ç –≥–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"""
    url = f"https://newsapi.org/v2/top-headlines?country=ru&apiKey={NEWS_API_KEY}"
    try:
        response = requests.get(url).json()
        if response.get("articles"):
            news = response["articles"][:3]
            return "üì∞ –ì–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:\n" + "\n\n".join([f"‚Ä¢ {n['title']}" for n in news])
        return "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π."
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π."

def send_daily_report():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—á–µ—Ç"""
    message = f"{get_weather()}\n\n{check_birthdays()}\n\n{get_news()}"
    try:
        bot.send_message(chat_id=CHAT_ID, text=message)
        logging.info("‚úÖ –£—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞: {e}")

# === –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ë–û–¢–ê ===

def weather_command(update: Update, context: CallbackContext):
    update.message.reply_text(get_weather())

def birthdays_command(update: Update, context: CallbackContext):
    update.message.reply_text(check_birthdays())

def news_command(update: Update, context: CallbackContext):
    update.message.reply_text(get_news())

def report_command(update: Update, context: CallbackContext):
    send_daily_report()
    update.message.reply_text("‚úÖ –£—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
def main():
    updater = Updater(TELEGRAM_BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("weather", weather_command))
    dp.add_handler(CommandHandler("birthdays", birthdays_command))
    dp.add_handler(CommandHandler("news", news_command))
    dp.add_handler(CommandHandler("report", report_command))

    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    schedule.every().day.at("07:00").do(send_daily_report)

    def scheduler():
        while True:
            schedule.run_pending()
            time.sleep(60)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    from threading import Thread
    Thread(target=scheduler).start()

    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
